<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Minecraft 开服教程</title>
    <url>/2021/06/13/Minecraft-%E5%BC%80%E6%9C%8D%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>众所周知，开一个服务器是非常简单的qwq<br>只需要 一个核心 一句命令  </p>
<span id="more"></span>
<p>开服的第一步就是选好核心，这里推荐的镜像站有<a href="http://www.tcotp.cn/">www.tcotp.cn</a><br>我个人比较喜欢PaperSpigot  </p>
<p>下载完后，将核心放进一个单独的目录<br>然后右键-&gt;新建-&gt;txt文本文档-&gt;右键-&gt;重命名-&gt;命名为Start.bat（没有后缀名”.txt”的自行百度）<br>Start.bat里面写入如下内容:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -Xmx &#123;Max_memory&#125; -jar &#123;corename&#125; nogui</span><br></pre></td></tr></table></figure>
<p>其中，{Max_memory}处填写服务器最大内存，比如1G,1500M，{corename}处填写核心名字，比如paper.jar</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -Xmx 3G -jar paper.jar nogui</span><br></pre></td></tr></table></figure>
<p>这句示例运行后会启动一个最大内存3GB，核心名为paper.jar的服务器（注意，核心要和这个批处理文件<strong>处于同一目录！</strong>）</p>
<p>写完后保存，双击运行，就可以开服啦qwq</p>
]]></content>
      <categories>
        <category>Minecraft_Server</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Minecraft</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft 服务器配置</title>
    <url>/2021/06/13/Minecraft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>上次我们讲了怎么开服，这次我们来讲一讲怎么配置服务器<br>上次有一点没有讲到的地方…</p>
<span id="more"></span>
<p>第一次开服一定会失败，失败后，需要打开目录下的eula.txt，将里面的eula=false改为eula=true，表示你同意了eula协议，然后重启服务器即可生成世界</p>
<p>第二次开服后，应该会出现一个文件，叫做<code>server.properties</code>，这是服务器的配置文件</p>
<p>第一次生成的内容应该和下面的差不多（此处以1.16.4版本为准，下面的词法分析器有问题，别管他）  </p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Minecraft server properties</span></span><br><span class="line"><span class="comment">#Fri Jun 11 20:43:29 CST 2021</span></span><br><span class="line"><span class="meta">spawn-protection</span>=<span class="string">16</span></span><br><span class="line"><span class="meta">max-tick-time</span>=<span class="string">60000</span></span><br><span class="line"><span class="meta">query.port</span>=<span class="string">25565</span></span><br><span class="line"><span class="meta">generator-settings</span>=<span class="string"></span></span><br><span class="line"><span class="meta">sync-chunk-writes</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">force-gamemode</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">allow-nether</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">enforce-whitelist</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">gamemode</span>=<span class="string">survival</span></span><br><span class="line"><span class="meta">broadcast-console-to-ops</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">enable-query</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">player-idle-timeout</span>=<span class="string">0</span></span><br><span class="line"><span class="meta">text-filtering-config</span>=<span class="string"></span></span><br><span class="line"><span class="attr">difficulty</span>=<span class="string">easy</span></span><br><span class="line"><span class="meta">broadcast-rcon-to-ops</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spawn-monsters</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">op-permission-level</span>=<span class="string">4</span></span><br><span class="line"><span class="attr">pvp</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">entity-broadcast-range-percentage</span>=<span class="string">100</span></span><br><span class="line"><span class="meta">snooper-enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">level-type</span>=<span class="string">default</span></span><br><span class="line"><span class="meta">enable-status</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">hardcore</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">enable-command-block</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">network-compression-threshold</span>=<span class="string">256</span></span><br><span class="line"><span class="meta">max-players</span>=<span class="string">20</span></span><br><span class="line"><span class="meta">max-world-size</span>=<span class="string">29999984</span></span><br><span class="line"><span class="meta">resource-pack-sha1</span>=<span class="string"></span></span><br><span class="line"><span class="meta">function-permission-level</span>=<span class="string">2</span></span><br><span class="line"><span class="meta">rcon.port</span>=<span class="string">25575</span></span><br><span class="line"><span class="meta">server-port</span>=<span class="string">25565</span></span><br><span class="line"><span class="attr">debug</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">server-ip</span>=<span class="string"></span></span><br><span class="line"><span class="meta">spawn-npcs</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">allow-flight</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">level-name</span>=<span class="string">world</span></span><br><span class="line"><span class="meta">view-distance</span>=<span class="string">10</span></span><br><span class="line"><span class="meta">resource-pack</span>=<span class="string"></span></span><br><span class="line"><span class="meta">spawn-animals</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">white-list</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">rcon.password</span>=<span class="string"></span></span><br><span class="line"><span class="meta">generate-structures</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">online-mode</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">max-build-height</span>=<span class="string">256</span></span><br><span class="line"><span class="meta">level-seed</span>=<span class="string"></span></span><br><span class="line"><span class="meta">prevent-proxy-connections</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">use-native-transport</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">enable-jmx-monitoring</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">motd</span>=<span class="string">A Minecraft Server</span></span><br><span class="line"><span class="meta">rate-limit</span>=<span class="string">0</span></span><br><span class="line"><span class="meta">enable-rcon</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure>
<p>这里我们只讲解其中的几项<br><code>allow-nether</code>，这个选项设为false后不会生成下界<br><code>enforce-whitelist</code>，强制白名单，设为true后不在白名单中的人<strong>无法进入服务器</strong><br><code>gamemode</code>，默认游戏模式，默认值为survival，可以改为creative设置默认创造模式<br><code>difficulty</code>，难度，默认为easy<br><code>op-permission-level</code>，op权限等级，有1~4级，具体权限自行百度<br><code>pvp</code>，是否允许pvp（玩家互相伤害），true是允许，false是禁止<br><code>view-distance</code>，玩家最远的视距，建议3左右，太大会导致卡顿<br><code>max-players</code>，服务器最大人数<br><code>online-mode</code>，正版验证，默认开启（true），非正版登录玩家无法登录游戏，若设为false，则允许离线登录玩家进入<br><code>motd</code>，添加服务器后显示在名称下的描述</p>
<p>大致的重要配置就这几项，照着需求修改即可qwq</p>
]]></content>
      <categories>
        <category>Minecraft_Server</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Minecraft</tag>
        <tag>Config</tag>
      </tags>
  </entry>
  <entry>
    <title>HashMap</title>
    <url>/2021/06/14/HashMap/</url>
    <content><![CDATA[<h4 id="特点简述"><a href="#特点简述" class="headerlink" title="特点简述"></a>特点简述</h4><p>在冒烟的Java中，有一种集合叫做HashMap  </p>
<span id="more"></span>
<p>它拥有极快的速度，以一键对应一值的方式存储数据<br>非常适合大型数据处理<br>它的一个键下只能有1个值<br>若键重复，新的值会覆盖旧的值<br>需要import一个包<code>import java.util.HashMap</code><br>创建一个HashMap的实例也很简单：  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HashMap&lt;<span class="keyword">int</span>,string&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure>
<p>这样就能新建一个int键对应string值的一个HashMap </p>
<h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><p>1、puts(key,value) 这个方法会添加一对键为key值为value的数据<br>2、get(key) 用key来查找value<br>3、remove(key) 删除键为key的数据<br>4、containsKey(key) HashMap中是否存在一个键为key的数据<br>5、containsValue(Value) HashMap中是否存在一个值为Value的数据</p>
<p>这个数据类型非常适合做登录和交易插件<br>下一次，我们讲一个交易插件的实例<br>就讲到这里，再见qwq</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>集合</tag>
      </tags>
  </entry>
  <entry>
    <title>set集合</title>
    <url>/2021/06/14/set%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h4 id="特点简述"><a href="#特点简述" class="headerlink" title="特点简述"></a>特点简述</h4><p>在奇妙的C++中，有一种奇妙的集合，叫做set  </p>
<span id="more"></span>
<p>他的定义方法如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">set&lt;<span class="keyword">int</span>&gt; s;</span><br></pre></td></tr></table></figure>
<p>当然，这样做要导入一个头文件<code>&lt;set&gt;</code>，如果你用的是万能头，当我没说<br>set集合具有以下两个特点：<br>1、set中的元素都是排好序（升序）的<br>2、set集合中没有重复的元素<br>这样来看，你可能会认为可以像<code>sort()</code>那样通过重载小于号来改变其排列顺序<br>没错，它可以改变排列顺序，但不是重载小于号，而是重载<code>()</code><br>而且它（重载的小于号）还<strong>必须作为一个类的成员</strong><br>这里给出一段示例代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmp</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> t1,<span class="keyword">const</span> <span class="keyword">int</span> t2)</span><span class="keyword">const</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t1&gt;t2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">set&lt;cow,cmp&gt; s;</span><br></pre></td></tr></table></figure>
<p>注意，这里不止定义了一个类，set的定义也有变化<br>其尖括号中多了一个参数-&gt;类名<br>这样，这个set集合就会以降序来排列  </p>
<h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><p>这里列举几个set的常用方法<br>1、insert() 向集合中插入一个元素<br>2、erase(it) 删除迭代器指针it处的元素<br>3、size() 返回集合中元素的个数<br>4、begin() 返回集合首个元素的<strong>指针</strong><br>5、end() 返回集合最后一个元素的<strong>指针</strong><br>6、empty() 判断集合是否为空<br>7、clear() 清除集合中所有元素</p>
<p>set集合就讲这么多，再见qwq</p>
]]></content>
      <categories>
        <category>Cpp</category>
      </categories>
      <tags>
        <tag>集合</tag>
        <tag>Cpp</tag>
      </tags>
  </entry>
</search>
